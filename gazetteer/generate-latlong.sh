#!/bin/bash

RED='\033[0;31m'
NC='\033[0m' # No Color


cloud_provider=$1
input=src/$cloud_provider.jsonnet
tmpfile=$cloud_provider.jsonnet.autogenerated
output=$cloud_provider.json


get() {
    region_key=$1
    key=$2
    jsonnet $input | jq -r --arg region_key "$region_key" --arg key "$key" '.[] | select(.key == $region_key) | .[$key]'
}


get_wikislug() {
    key=$1
    get $key wikiSlug
}


get_name() {
    key=$1
    get $key name
}

is_number() {
    [[ "$1" =~ ^-?[0-9]+(.[0-9]+)?$ ]]
}


echo "// NOTE: Do not edit. This file was autogeneted at $(date)" > $tmpfile
echo "[" >> $tmpfile

for key in $(jsonnet $input | jq -r '.[].key'); do
    slug=$(get $key wikiSlug)
    echo "=== $key ($slug)"
    coords_text=$(curl -s https://en.wikipedia.org/wiki/$slug | grep -A1 wgCoordinates | paste -d "" - -)
    lat=$(echo "$coords_text" | grep -oP '"lat":[0-9.-]+' | cut -f2 -d:)
    lon=$(echo "$coords_text" | grep -oP '"lon":[0-9.-]+' | cut -f2 -d:)

    echo $slug: lat=$lat lon=$lon

    if ! is_number "$lat"; then
        printf "${RED}WARN: Cannot automatically get latitude ($lat) for: $key${NC}\n"
        lat=$(get $key latitude)
        if ! is_number "$lat"; then
            printf "${RED}FATAL: Cannot get latitude ($lat) for: $key${NC}\n"
            exit
        fi
    fi

    if ! is_number "$lon"; then
        printf "${RED}WARN: Cannot automatically get longitude ($lon) for: $key${NC}\n"
        lon=$(get $key longitude)
        if ! is_number "$lon"; then
            printf "${RED}FATAL: Cannot get latitude ($lon) for: $key${NC}\n"
            exit
        fi
    fi

    echo "  {key: \"$key\", latitude: $lat, longitude: $lon, name: \"$(get $key name)\", provider: \"$(get $key provider)\"}," >> $tmpfile
done

echo "]" >> $tmpfile
jsonnet $tmpfile > $output
